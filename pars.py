import os
import sys
import time
import random
import pandas as pd
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.common.by import By

# üßæ –ê—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
if len(sys.argv) != 3:
    print("‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python multi_parser.py <start_page> <end_page>")
    sys.exit(1)

start_page = int(sys.argv[1])
end_page = int(sys.argv[2])

output_path = f"data/cian_part_{start_page}_{end_page}.csv"
os.makedirs("data", exist_ok=True)

# üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥—Ä–∞–π–≤–µ—Ä–∞
options = webdriver.ChromeOptions()
options.binary_location = "C:/Users/–°–µ—Ä–≥–µ–π/AppData/Local/Yandex/YandexBrowser/Application/browser.exe"
options.add_argument('--headless')
options.add_argument('--no-sandbox')
options.add_argument('--disable-dev-shm-usage')

driver = webdriver.Chrome(
    service=Service("C:/Users/–°–µ—Ä–≥–µ–π/Downloads/134.0.6998.35 chromedriver-win64/chromedriver-win64/chromedriver.exe"),
    options=options
)

data = []

for page in range(start_page, end_page + 1):
    try:
        url = f"https://www.cian.ru/cat.php?deal_type=sale&engine_version=2&offer_type=flat&p={page}&region=1"
        driver.get(url)
        time.sleep(random.uniform(4.5, 8.0))

        cards = driver.find_elements(By.XPATH, '//article[@data-name="CardComponent"]')
        print(f"[–°—Ç—Ä–∞–Ω–∏—Ü–∞ {page}] –ù–∞–π–¥–µ–Ω–æ –∫–∞—Ä—Ç–æ—á–µ–∫: {len(cards)}")

        for card in cards:
            try:
                title = card.find_element(By.XPATH, './/span[contains(@data-mark,"Title")]').text
            except:
                title = "–ù–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏—è"

            try:
                price = card.find_element(By.XPATH, './/span[contains(@data-mark,"Price")]').text
            except:
                price = "–ù–µ—Ç —Ü–µ–Ω—ã"

            try:
                info = card.find_element(By.XPATH, './/div[contains(@class,"_93444fe79c--labels--")]').text
            except:
                info = "–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è"

            try:
                link = card.find_element(By.XPATH, './/a[contains(@href, "/sale/")]').get_attribute("href")
            except:
                link = "–ù–µ—Ç —Å—Å—ã–ª–∫–∏"

            data.append({
                "–ù–∞–∑–≤–∞–Ω–∏–µ": title,
                "–¶–µ–Ω–∞": price,
                "–ò–Ω—Ñ–æ": info,
                "–°—Å—ã–ª–∫–∞": link
            })

        # üíæ –ê–≤—Ç–æ—Å–µ–π–≤
        pd.DataFrame(data).to_csv(output_path, index=False, encoding='utf-8-sig')
        print(f"üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ {len(data)} –æ–±—ä—è–≤–ª–µ–Ω–∏–π (–¥–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã {page})")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ {page}: {e}")
        time.sleep(10)

driver.quit()
print(f"‚úÖ –ì–æ—Ç–æ–≤–æ. –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {len(data)} –≤ {output_path}")
